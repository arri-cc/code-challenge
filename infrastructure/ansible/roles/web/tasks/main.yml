---
# tasks file for app-server

- name: Ensure microsoft repository is installed
  yum:
    name: https://packages.microsoft.com/config/rhel/7/packages-microsoft-prod.rpm
    state: present

- name: Ensure epel-release is installed
  yum:
    name: epel-release
    state: present

- name: Ensure required app server packages are installed
  yum:
    name:
      - dotnet-sdk-2.1-2.1.403-1
      - aspnetcore-runtime-2.1-2.1.5-1
      - nginx-1.12.2
    state: present

- name: Ensure custom nginx.conf exists
  copy:
    src: "{{ role_path }}/files/nginx.conf"
    dest: /etc/nginx/nginx.conf
  notify: restart nginx

- name: Ensure nginx is started and enabled
  service:
    name: nginx
    state: started
    enabled: yes

- name: Ensure Health Check override if flag is present
  replace:
    path: /home/centos/luckyapp/appsettings.json
    regexp: '"Health Checker: OK"'
    replace: '"Another Health Checker: OK"'
  when: 'override_health_check is defined and override_health_check == "yes"'

- name: Ensure CDN base url is configured when present
  replace:
    path: /home/centos/luckyapp/appsettings.json
    regexp: "/images"
    replace: "//{{ cdn_host }}/images"
  when: 'cdn_host is defined and cdn_host != ""'

- name: Ensure the dotnet core app is built
  shell: dotnet publish /home/centos/luckyapp/LuckyApp.csproj -c Release -o /home/centos/luckyapp-release

- name: Ensure luckyapp directory exists
  file:
    path: /var/www/luckyapp
    state: directory
    owner: nginx
    group: nginx

- name: Ensure luckyapp is installed
  copy:
    src: /home/centos/luckyapp-release/
    dest: /var/www/luckyapp/
    mode: 644
  notify: restart luckyapp.service

- name: Ensure web is configured as a service
  copy:
    src: "{{ role_path }}/files/luckyapp.service"
    dest: /etc/systemd/system/luckyapp.service
    mode: 644
  notify: reload systemctl

- name: Ensure luckyapp service is running
  systemd:
    name: luckyapp.service
    state: started
    enabled: true

- name: Ensure httpd_can_network_connect flag is on and kept persistent across reboots so nginx works
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes



